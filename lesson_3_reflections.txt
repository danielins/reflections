Q: When would you want to use a remote repository rather than keeping all your work local?
	When working on different machines and/or with multiple people on the same project.


Q: Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	To have more control of what is being saved on the remote repository, avoiding pointless updates and commits.

Q: Describe the differences between forks, clones, and branches.  When would you use one instead of another?
	Forks will be used when I will clone an existing repository from another person, given that person a link and letting people know that the original repository wasn't mine. Clones are used to duplicate my own repositories (that might be forked ones in the beginning). Branches are used when I will add features to a repository but I don't want them to affect a current state of the project.


Q: What is the benefit of having a copy of the last known state of the remote stored locally?
	Being able to know the last known state while being offline and comparing that state with your current stage area and commits.

Q: How would you collaborate without using Git or GitHub?  What would be easier and what would be harder?
	Using heavy documentation and duplicates of code files. It would be harder to maintain the different states/versions without Git.

Q: When would you want to make changes in a separate branch rather than directly in master?  What benefits does each approach have?
	When implementing new features that won't be ready or need testing/approval, fixing bugs on crucial parts of the code or when making pull requests or collaborating in any other sort. It gives more security that the master branch won't crash. However, when these cares aren't needed, it's easier to deal with just master brach.